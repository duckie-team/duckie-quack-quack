[versions]
gradle-android = "8.1.0-alpha09"
gradle-publish-maven = "0.24.0"

google-autoservice-standard = "1.0.1"
google-autoservice-ksp = "1.0.0"

kotlin-core = "1.8.10"
kotlin-ksp = "1.8.10-1.0.9"
kotlin-dokka = "1.8.10"
kotlin-kotlinpoet = "1.12.0"
kotlin-detekt = "1.22.0"
kotlin-ktlint-gradle = "11.3.1"
kotlin-ktlint-source = "0.48.2"
kotlin-collections-immutable = "0.3.5"

android-lint = "30.4.2"

androidx-core-ktx = "1.9.0"
androidx-annotation = "1.6.0"
androidx-datastore = "1.0.0" # for Playground
androidx-benchmark = "1.1.1"
androidx-profileinstaller = "1.2.2"

compose-uiutil = "1.3.3"
compose-compiler = "1.4.3"
compose-material = "1.3.1"
compose-animation = "1.3.3"
compose-material3 = "1.0.1" # for Playground
compose-activity = "1.6.1"
compose-coil = "2.2.2"

test-junit-core = "4.13.2"
test-junit-engine = "5.9.2"
test-junit-compose = "1.3.3"
test-strikt = "0.34.1"
test-paparazzi = "1.2.0"
test-injector-parameter = "1.10"
test-mockito-core = "5.2.0"
test-mockito-android = "5.2.0"
test-mockito-kotlin = "4.1.0"
test-kotlin-compilation-ksp = "1.5.0"

[plugins]
gradle-publish-maven-core = { id = "com.vanniktech.maven.publish", version.ref = "gradle-publish-maven" }
gradle-publish-maven-base = { id = "com.vanniktech.maven.publish.base", version.ref = "gradle-publish-maven" }

kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "kotlin-ksp" }
kotlin-dokka = { id = "org.jetbrains.dokka", version.ref = "kotlin-dokka" }
kotlin-detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "kotlin-detekt" }
kotlin-ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "kotlin-ktlint-gradle" }

test-paparazzi = { id = "app.cash.paparazzi", version.ref = "test-paparazzi" }

[libraries]
gradle-android = { module = "com.android.tools.build:gradle", version.ref = "gradle-android" }
gradle-publish-maven = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "gradle-publish-maven" }

google-autoservice-annotation = { module = "com.google.auto.service:auto-service-annotations", version.ref = "google-autoservice-standard" }
google-autoservice-ksp-processor = { module = "dev.zacsweers.autoservice:auto-service-ksp", version.ref = "google-autoservice-ksp" }

kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-core" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin-core" }
kotlin-embeddable-compiler = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin-core" }
kotlin-ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "kotlin-ksp" }
kotlin-ksp-internal = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "kotlin-ksp" }
kotlin-kotlinpoet-core = { module = "com.squareup:kotlinpoet", version.ref = "kotlin-kotlinpoet" }
kotlin-kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlin-kotlinpoet" }
kotlin-dokka-base = { module = "org.jetbrains.dokka:dokka-base", version.ref = "kotlin-dokka" }
kotlin-dokka-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "kotlin-dokka" }
kotlin-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlin-collections-immutable" }

android-lint-core = { module = "com.android.tools.lint:lint", version.ref = "android-lint" } # for testing
android-lint-api = { module = "com.android.tools.lint:lint-api", version.ref = "android-lint" } # compileOnly
android-lint-checks = { module = "com.android.tools.lint:lint-checks", version.ref = "android-lint" } # compileOnly

androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core-ktx" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-datastore" }
androidx-benchmark = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "androidx-benchmark" }
androidx-profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "androidx-profileinstaller" }

compose-uiutil = { module = "androidx.compose.ui:ui-util", version.ref = "compose-uiutil" }
compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "compose-compiler" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose-material" }
compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose-animation" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "compose-activity" }
compose-coil = { module = "io.coil-kt:coil-compose", version.ref = "compose-coil" }

test-android-lint = { module = "com.android.tools.lint:lint-tests", version.ref = "android-lint" }
test-junit-core = { module = "junit:junit", version.ref = "test-junit-core" }
test-junit-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "test-junit-engine" } # testRuntimeOnly
test-junit-compose = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "test-junit-compose" } # androidTestImplementation
test-strikt = { module = "io.strikt:strikt-core", version.ref = "test-strikt" }
test-injector-parameter = { module = "com.google.testparameterinjector:test-parameter-injector", version.ref = "test-injector-parameter" }
test-mockito-core = { module = "org.mockito:mockito-core", version.ref = "test-mockito-core" }
test-mockito-android = { module = "org.mockito:mockito-android", version.ref = "test-mockito-android" }
test-mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "test-mockito-kotlin" }
test-kotlin-compilation-core = { module = "com.github.tschuchortdev:kotlin-compile-testing", version.ref = "test-kotlin-compilation-ksp" }
test-kotlin-compilation-ksp = { module = "com.github.tschuchortdev:kotlin-compile-testing-ksp", version.ref = "test-kotlin-compilation-ksp" }

detekt-plugin-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "kotlin-detekt" }

[bundles]
android-lint = ["android-lint-api", "android-lint-checks"]
test-mockito = ["test-mockito-core", "test-mockito-android", "test-mockito-kotlin"]
test-android-lint = ["android-lint-core", "test-android-lint"]
