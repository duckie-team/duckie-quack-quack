// This file was automatically generated by casa-processor.
// Do not modify it manually.
@file:OptIn(ExperimentalQuackQuackApi::class)

import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import kotlinx.collections.immutable.ImmutableList
import kotlinx.collections.immutable.persistentListOf
import kotlinx.collections.immutable.toImmutableList
import team.duckie.quackquack.casa.material.CasaModel
import team.duckie.quackquack.ui.sugar.QuackBody1
import team.duckie.quackquack.ui.sugar.QuackBody2
import team.duckie.quackquack.ui.sugar.QuackBody3
import team.duckie.quackquack.ui.sugar.QuackFilledTag
import team.duckie.quackquack.ui.sugar.QuackGrayscaleFlatTag
import team.duckie.quackquack.ui.sugar.QuackGrayscaleOutlinedTag
import team.duckie.quackquack.ui.sugar.QuackHeadLine1
import team.duckie.quackquack.ui.sugar.QuackHeadLine2
import team.duckie.quackquack.ui.sugar.QuackLarge1
import team.duckie.quackquack.ui.sugar.QuackMediumButton
import team.duckie.quackquack.ui.sugar.QuackOutlinedTag
import team.duckie.quackquack.ui.sugar.QuackPrimaryFilledSmallButton
import team.duckie.quackquack.ui.sugar.QuackPrimaryLargeButton
import team.duckie.quackquack.ui.sugar.QuackPrimaryOutlinedRoundSmallButton
import team.duckie.quackquack.ui.sugar.QuackPrimaryOutlinedSmallButton
import team.duckie.quackquack.ui.sugar.QuackQuote
import team.duckie.quackquack.ui.sugar.QuackSecondaryLargeButton
import team.duckie.quackquack.ui.sugar.QuackSecondaryRoundSmallButton
import team.duckie.quackquack.ui.sugar.QuackSecondarySmallButton
import team.duckie.quackquack.ui.sugar.QuackSubtitle
import team.duckie.quackquack.ui.sugar.QuackSubtitle2
import team.duckie.quackquack.ui.sugar.QuackTitle1
import team.duckie.quackquack.ui.sugar.QuackTitle2
import team.duckie.quackquack.ui.util.ExperimentalQuackQuackApi

private val buttonQuackButtonCasaModel: CasaModel = CasaModel(
  name = "QuackButton",
  domain = "button",
  kdocDefaultSection = """
      |버튼을 그립니다.
      |
      |This component uses [QuackButtonStyle.PrimaryLarge] as the token value for `style`.
      |""".trimMargin(),
  components = persistentListOf<Pair<String, @Composable () -> Unit>>(
    "QuackPrimaryLargeButton" to {
      QuackPrimaryLargeButton(
        text = "QuackButton is experimental",
        onClick = {},
      )
    },
    "QuackSecondaryLargeButton" to {
      QuackSecondaryLargeButton(
        text = "QuackButton is experimental",
        onClick = {},
      )
    },
    "QuackMediumButton" to {
      QuackMediumButton(
        text = "QuackButton is experimental",
        onClick = {},
      )
    },
    "QuackPrimaryFilledSmallButton" to {
      QuackPrimaryFilledSmallButton(
        text = "QuackButton is experimental",
        onClick = {},
      )
    },
    "QuackPrimaryFilledSmallButton(ForceSize)" to {
      QuackPrimaryFilledSmallButton(
        modifier = Modifier
          .fillMaxWidth()
          .height(56.dp),
        text = "QuackButton is experimental",
        onClick = {},
      )
    },
    "QuackPrimaryOutlinedSmallButton" to {
      QuackPrimaryOutlinedSmallButton(
        text = "QuackButton is experimental",
        onClick = {},
      )
    },
    "QuackPrimaryOutlinedRoundSmallButton" to {
      QuackPrimaryOutlinedRoundSmallButton(
        text = "QuackButton is experimental",
        onClick = {},
      )
    },
    "QuackSecondarySmallButton" to {
      QuackSecondarySmallButton(
        text = "QuackButton is experimental",
        onClick = {},
      )
    },
    "QuackSecondaryRoundSmallButton" to {
      QuackSecondaryRoundSmallButton(
        text = "QuackButton is experimental",
        onClick = {},
      )
    },
  ).toImmutableList(),
)

private val tagQuackTagCasaModel: CasaModel = CasaModel(
  name = "QuackTag",
  domain = "tag",
  kdocDefaultSection = """
      |태그를 그립니다.
      |
      |This component uses [QuackTagStyle.Outlined] as the token value for `style`.
      |""".trimMargin(),
  components = persistentListOf<Pair<String, @Composable () -> Unit>>(
    "QuackOutlinedTag" to {
      QuackOutlinedTag(
        text = "QuackTagPreview",
        onClick = {},
      )
    },
    "QuackFilledTag" to {
      QuackFilledTag(
        text = "QuackTagPreview",
        onClick = {},
      )
    },
    "QuackGrayscaleFlatTag" to {
      QuackGrayscaleFlatTag(
        text = "QuackTagPreview",
        onClick = {},
      )
    },
    "QuackGrayscaleOutlinedTag" to {
      QuackGrayscaleOutlinedTag(
        text = "QuackTagPreview",
        onClick = {},
      )
    },
  ).toImmutableList(),
)

private val textQuackTextCasaModel: CasaModel = CasaModel(
  name = "QuackText",
  domain = "text",
  kdocDefaultSection = """
      |텍스트를 그리는 기본적인 컴포저블입니다.
      |
      |This component uses [QuackTypography.Body1] as the token value for `typography`.
      |""".trimMargin(),
  components = persistentListOf<Pair<String, @Composable () -> Unit>>(
    "QuackBody1" to {
      QuackBody1(
        text = "QuackText",
      )
    },
    "QuackBody2" to {
      QuackBody2(
        text = "QuackText",
      )
    },
    "QuackBody3" to {
      QuackBody3(
        text = "QuackText",
      )
    },
    "QuackHeadLine1" to {
      QuackHeadLine1(
        text = "QuackText",
      )
    },
    "QuackHeadLine2" to {
      QuackHeadLine2(
        text = "QuackText",
      )
    },
    "QuackLarge1" to {
      QuackLarge1(
        text = "QuackText",
      )
    },
    "QuackQuote" to {
      QuackQuote(
        text = "QuackText",
      )
    },
    "QuackSubtitle" to {
      QuackSubtitle(
        text = "QuackText",
      )
    },
    "QuackSubtitle2" to {
      QuackSubtitle2(
        text = "QuackText",
      )
    },
    "QuackTitle1" to {
      QuackTitle1(
        text = "QuackText",
      )
    },
    "QuackTitle2" to {
      QuackTitle2(
        text = "QuackText",
      )
    },
  ).toImmutableList(),
)

public val casaModels: ImmutableList<CasaModel> = persistentListOf(
  buttonQuackButtonCasaModel,
  tagQuackTagCasaModel,
  textQuackTextCasaModel,
)
