// This file was automatically generated by casa-processor.
// Do not modify it manually.
// @formatter:off
@file:Suppress("NoConsecutiveBlankLines", "PackageDirectoryMismatch", "Wrapping",
    "TrailingCommaOnCallSite", "ArgumentListWrapping", "RedundantVisibilityModifier",
    "UnusedImport", "NoUnusedImports", "SpacingAroundParens", "Indentation", "NoUnitReturn",
    "RedundantUnitReturnType", "ModifierParameter", "KDocUnresolvedReference", "NoTrailingSpaces",
    "NoMultipleSpaces", "ktlint")
@file:OptIn(ExperimentalQuackQuackApi::class)

import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.style.TextOverflow
import kotlin.Boolean
import kotlin.Function0
import kotlin.String
import kotlin.Suppress
import kotlinx.collections.immutable.ImmutableList
import kotlinx.collections.immutable.persistentListOf
import kotlinx.collections.immutable.toImmutableList
import team.duckie.quackquack.casa.material.CasaModel
import team.duckie.quackquack.ui.sugar.QuackBody1
import team.duckie.quackquack.ui.sugar.QuackBody2
import team.duckie.quackquack.ui.sugar.QuackBody3
import team.duckie.quackquack.ui.sugar.QuackFilledTag
import team.duckie.quackquack.ui.sugar.QuackGrayscaleFlatTag
import team.duckie.quackquack.ui.sugar.QuackGrayscaleOutlinedTag
import team.duckie.quackquack.ui.sugar.QuackHeadLine1
import team.duckie.quackquack.ui.sugar.QuackHeadLine2
import team.duckie.quackquack.ui.sugar.QuackLarge1
import team.duckie.quackquack.ui.sugar.QuackMediumButton
import team.duckie.quackquack.ui.sugar.QuackOutlinedTag
import team.duckie.quackquack.ui.sugar.QuackPrimaryFilledSmallButton
import team.duckie.quackquack.ui.sugar.QuackPrimaryLargeButton
import team.duckie.quackquack.ui.sugar.QuackPrimaryOutlinedRoundSmallButton
import team.duckie.quackquack.ui.sugar.QuackPrimaryOutlinedSmallButton
import team.duckie.quackquack.ui.sugar.QuackSecondaryLargeButton
import team.duckie.quackquack.ui.sugar.QuackSecondaryRoundSmallButton
import team.duckie.quackquack.ui.sugar.QuackSecondarySmallButton
import team.duckie.quackquack.ui.sugar.QuackSubtitle
import team.duckie.quackquack.ui.sugar.QuackSubtitle2
import team.duckie.quackquack.ui.sugar.QuackTitle1
import team.duckie.quackquack.ui.sugar.QuackTitle2
import team.duckie.quackquack.ui.util.ExperimentalQuackQuackApi

private val buttonQuackButtonCasaModel: CasaModel = CasaModel(
  name = "QuackButton",
  domain = "button",
  kdocDefaultSection = "버튼을 그립니다.",
  components = persistentListOf<Pair<String, @Composable () -> Unit>>(
      "QuackPrimaryLargeButton" to { QuackPrimaryLargeButton(
        text = "QuackButton is experimental",
        onClick = {},
      ) },
      "QuackSecondaryLargeButton" to { QuackSecondaryLargeButton(
        text = "QuackButton is experimental",
        onClick = {},
      ) },
      "QuackMediumButton" to { QuackMediumButton(
        text = "QuackButton is experimental",
        onClick = {},
      ) },
      "QuackPrimaryFilledSmallButton" to { QuackPrimaryFilledSmallButton(
        text = "QuackButton is experimental",
        onClick = {},
      ) },
      "QuackPrimaryOutlinedSmallButton" to { QuackPrimaryOutlinedSmallButton(
        text = "QuackButton is experimental",
        onClick = {},
      ) },
      "QuackPrimaryOutlinedRoundSmallButton" to { QuackPrimaryOutlinedRoundSmallButton(
        text = "QuackButton is experimental",
        onClick = {},
      ) },
      "QuackSecondarySmallButton" to { QuackSecondarySmallButton(
        text = "QuackButton is experimental",
        onClick = {},
      ) },
      "QuackSecondaryRoundSmallButton" to { QuackSecondaryRoundSmallButton(
        text = "QuackButton is experimental",
        onClick = {},
      ) },
      ).toImmutableList(),
)


private val tagQuackTagCasaModel: CasaModel = CasaModel(
  name = "QuackTag",
  domain = "tag",
  kdocDefaultSection = "태그를 그립니다.",
  components = persistentListOf<Pair<String, @Composable () -> Unit>>(
      "QuackOutlinedTag" to { QuackOutlinedTag(
        text = "QuackTagPreview",
        onClick = {},
      ) },
      "QuackFilledTag" to { QuackFilledTag(
        text = "QuackTagPreview",
        onClick = {},
      ) },
      "QuackGrayscaleFlatTag" to { QuackGrayscaleFlatTag(
        text = "QuackTagPreview",
        onClick = {},
      ) },
      "QuackGrayscaleOutlinedTag" to { QuackGrayscaleOutlinedTag(
        text = "QuackTagPreview",
        onClick = {},
      ) },
      ).toImmutableList(),
)

private val textQuackTextCasaModel: CasaModel = CasaModel(
  name = "QuackText",
  domain = "text",
  kdocDefaultSection = "텍스트를 그립니다.",
  components = persistentListOf<Pair<String, @Composable () -> Unit>>(
      "QuackBody1" to { QuackBody1(
        text = "QuackText",
      ) },
      "QuackBody2" to { QuackBody2(
        text = "QuackText",
      ) },
      "QuackBody3" to { QuackBody3(
        text = "QuackText",
      ) },
      "QuackHeadLine1" to { QuackHeadLine1(
        text = "QuackText",
      ) },
      "QuackHeadLine2" to { QuackHeadLine2(
        text = "QuackText",
      ) },
      "QuackLarge1" to { QuackLarge1(
        text = "QuackText",
      ) },
      "QuackSubtitle" to { QuackSubtitle(
        text = "QuackText",
      ) },
      "QuackSubtitle2" to { QuackSubtitle2(
        text = "QuackText",
      ) },
      "QuackTitle1" to { QuackTitle1(
        text = "QuackText",
      ) },
      "QuackTitle2" to { QuackTitle2(
        text = "QuackText",
      ) },
      ).toImmutableList(),
)

public val casaModels: ImmutableList<CasaModel> = persistentListOf(
  buttonQuackButtonCasaModel,
  tagQuackTagCasaModel,
  textQuackTextCasaModel,
)

