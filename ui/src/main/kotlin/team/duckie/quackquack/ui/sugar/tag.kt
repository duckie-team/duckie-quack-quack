// This file was automatically generated by sugar-processor.
// Do not modify it manually.
// @formatter:off
@file:Suppress("NoConsecutiveBlankLines", "PackageDirectoryMismatch", "Wrapping",
    "TrailingCommaOnCallSite", "ArgumentListWrapping", "RedundantVisibilityModifier",
    "UnusedImport", "NoUnusedImports", "SpacingAroundParens", "Indentation", "NoUnitReturn",
    "RedundantUnitReturnType", "ModifierParameter", "KDocUnresolvedReference", "NoTrailingSpaces",
    "NoMultipleSpaces", "ktlint")
@file:OptIn(SugarCompilerApi::class, SugarGeneratorUsage::class)
@file:SugarGeneratedFile

package team.duckie.quackquack.ui.sugar

import androidx.compose.runtime.Composable
import androidx.compose.runtime.NonRestartableComposable
import androidx.compose.ui.Modifier
import kotlin.Boolean
import kotlin.Function0
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import team.duckie.quackquack.casa.`annotation`.Casa
import team.duckie.quackquack.casa.`annotation`.CasaValue
import team.duckie.quackquack.casa.`annotation`.SugarGeneratorUsage
import team.duckie.quackquack.sugar.material.SugarCompilerApi
import team.duckie.quackquack.sugar.material.SugarGeneratedFile
import team.duckie.quackquack.sugar.material.SugarRefer
import team.duckie.quackquack.sugar.material.sugar
import team.duckie.quackquack.ui.QuackTag
import team.duckie.quackquack.ui.QuackTagStyle
import team.duckie.quackquack.ui.util.ExperimentalQuackQuackApi

/**
 *
 *
 * This component uses [QuackTagStyle.Outlined] as the token value for `style`.
 *
 * This document was automatically generated by [QuackTag].
 * If any contents are broken, please check the original document.
 */
@Casa
@Composable
@NonRestartableComposable
@ExperimentalQuackQuackApi
@SugarRefer("team.duckie.quackquack.ui.QuackTag")
public fun QuackOutlinedTag(
  @CasaValue("\"QuackTagPreview\"") text: String,
  modifier: Modifier = sugar(),
  selected: Boolean = sugar(),
  rippleEnabled: Boolean = sugar(),
  @CasaValue("{}") onClick: () -> Unit,
): Unit {
  QuackTag(
    text = text,
    modifier = modifier,
    selected = selected,
    rippleEnabled = rippleEnabled,
    style = QuackTagStyle.Outlined,
    onClick = onClick,
  )
}

/**
 *
 *
 * This component uses [QuackTagStyle.Filled] as the token value for `style`.
 *
 * This document was automatically generated by [QuackTag].
 * If any contents are broken, please check the original document.
 */
@Casa
@Composable
@NonRestartableComposable
@ExperimentalQuackQuackApi
@SugarRefer("team.duckie.quackquack.ui.QuackTag")
public fun QuackFilledTag(
  @CasaValue("\"QuackTagPreview\"") text: String,
  modifier: Modifier = sugar(),
  selected: Boolean = sugar(),
  rippleEnabled: Boolean = sugar(),
  @CasaValue("{}") onClick: () -> Unit,
): Unit {
  QuackTag(
    text = text,
    modifier = modifier,
    selected = selected,
    rippleEnabled = rippleEnabled,
    style = QuackTagStyle.Filled,
    onClick = onClick,
  )
}

/**
 *
 *
 * This component uses [QuackTagStyle.GrayscaleFlat] as the token value for `style`.
 *
 * This document was automatically generated by [QuackTag].
 * If any contents are broken, please check the original document.
 */
@Casa
@Composable
@NonRestartableComposable
@ExperimentalQuackQuackApi
@SugarRefer("team.duckie.quackquack.ui.QuackTag")
public fun QuackGrayscaleFlatTag(
  @CasaValue("\"QuackTagPreview\"") text: String,
  modifier: Modifier = sugar(),
  selected: Boolean = sugar(),
  rippleEnabled: Boolean = sugar(),
  @CasaValue("{}") onClick: () -> Unit,
): Unit {
  QuackTag(
    text = text,
    modifier = modifier,
    selected = selected,
    rippleEnabled = rippleEnabled,
    style = QuackTagStyle.GrayscaleFlat,
    onClick = onClick,
  )
}

/**
 *
 *
 * This component uses [QuackTagStyle.GrayscaleOutlined] as the token value for `style`.
 *
 * This document was automatically generated by [QuackTag].
 * If any contents are broken, please check the original document.
 */
@Casa
@Composable
@NonRestartableComposable
@ExperimentalQuackQuackApi
@SugarRefer("team.duckie.quackquack.ui.QuackTag")
public fun QuackGrayscaleOutlinedTag(
  @CasaValue("\"QuackTagPreview\"") text: String,
  modifier: Modifier = sugar(),
  selected: Boolean = sugar(),
  rippleEnabled: Boolean = sugar(),
  @CasaValue("{}") onClick: () -> Unit,
): Unit {
  QuackTag(
    text = text,
    modifier = modifier,
    selected = selected,
    rippleEnabled = rippleEnabled,
    style = QuackTagStyle.GrayscaleOutlined,
    onClick = onClick,
  )
}
