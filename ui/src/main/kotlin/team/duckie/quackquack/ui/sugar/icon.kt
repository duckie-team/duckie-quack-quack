// This file was automatically generated by sugar-processor.
// Do not modify it manually.
// @formatter:off
@file:Suppress("NoConsecutiveBlankLines", "PackageDirectoryMismatch", "Wrapping",
    "TrailingCommaOnCallSite", "ArgumentListWrapping", "RedundantVisibilityModifier",
    "UnusedImport", "NoUnusedImports", "SpacingAroundParens", "Indentation", "NoUnitReturn",
    "RedundantUnitReturnType", "ModifierParameter", "KDocUnresolvedReference", "NoTrailingSpaces",
    "NoMultipleSpaces", "ktlint")
@file:OptIn(SugarCompilerApi::class, SugarGeneratorUsage::class)
@file:SugarGeneratedFile

package team.duckie.quackquack.ui.sugar

import androidx.compose.runtime.Composable
import androidx.compose.runtime.NonRestartableComposable
import androidx.compose.ui.Modifier
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.unit.Dp
import kotlin.OptIn
import kotlin.Suppress
import kotlin.Unit
import team.duckie.quackquack.casa.`annotation`.Casa
import team.duckie.quackquack.casa.`annotation`.SugarGeneratorUsage
import team.duckie.quackquack.material.QuackColor
import team.duckie.quackquack.material.QuackIcon
import team.duckie.quackquack.sugar.material.SugarCompilerApi
import team.duckie.quackquack.sugar.material.SugarGeneratedFile
import team.duckie.quackquack.sugar.material.SugarRefer
import team.duckie.quackquack.sugar.material.sugar
import team.duckie.quackquack.ui.QuackIcon

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Area] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackAreaIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Area,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.ArrowBack] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackArrowBackIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.ArrowBack,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.ArrowDown] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackArrowDownIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.ArrowDown,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.ArrowRight] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackArrowRightIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.ArrowRight,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.ArrowSend] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackArrowSendIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.ArrowSend,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Badge] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackBadgeIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Badge,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Bookmark] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackBookmarkIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Bookmark,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Buy] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackBuyIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Buy,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Camera] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackCameraIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Camera,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Check] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackCheckIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Check,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Close] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackCloseIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Close,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Comment] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackCommentIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Comment,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Delete] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackDeleteIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Delete,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.DeleteBg] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackDeleteBgIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.DeleteBg,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Dm] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackDmIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Dm,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Feed] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackFeedIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Feed,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.FilledBookmark] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackFilledBookmarkIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.FilledBookmark,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.FilledHeart] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackFilledHeartIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.FilledHeart,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.FilledProfile] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackFilledProfileIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.FilledProfile,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Filter] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackFilterIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Filter,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Gallery] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackGalleryIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Gallery,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Heart] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackHeartIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Heart,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Image] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackImageIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Image,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.ImageEdit] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackImageEditIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.ImageEdit,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.ImageEditBg] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackImageEditBgIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.ImageEditBg,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.MarketPrice] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackMarketPriceIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.MarketPrice,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.More] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackMoreIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.More,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.NoticeAdd] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackNoticeAddIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.NoticeAdd,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Place] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackPlaceIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Place,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Plus] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackPlusIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Plus,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Profile] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackProfileIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Profile,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Search] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackSearchIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Search,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Sell] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackSellIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Sell,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Setting] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackSettingIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Setting,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Share] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackShareIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Share,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Tag] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackTagIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Tag,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.TextLogo] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackTextLogoIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.TextLogo,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.WhiteHeart] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackWhiteHeartIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.WhiteHeart,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}

/**
 * [QuackIcon]을 그립니다. 아이콘 사이즈는 [Modifier.size]로 정하는 게 아닌
 * [size] 인자로 제공해야 합니다. [size] 기본값은 24dp로 제공됩니다.
 *
 * This component uses [QuackIcon.Won] as the token value for `icon`.
 *
 * This document was automatically generated by [QuackIcon].
 * If any contents are broken, please check the original document.
 *
 * @param size 아이콘 사이즈
 * @param tint 아이콘에 입힐 틴트
 * @param contentScale 아이콘에 적용할 [contentScale][ContentScale]
 */
@Casa
@Composable
@NonRestartableComposable
@SugarRefer("team.duckie.quackquack.ui.QuackIcon")
public fun QuackWonIcon(
  modifier: Modifier = sugar(),
  size: Dp = sugar(),
  tint: QuackColor = sugar(),
  contentScale: ContentScale = sugar(),
): Unit {
  QuackIcon(
    icon = QuackIcon.Won,
    modifier = modifier,
    size = size,
    tint = tint,
    contentScale = contentScale,
  )
}
