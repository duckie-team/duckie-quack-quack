name: Artifact Builds and Stable Publish
env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false"
  ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
  ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
  ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY_ID }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY_PASSWORD }}
on:
  pull_request:
    branches: [ master ]
    types: [ closed ]

jobs:
  artifact-builds:
    if: ${{
      github.event.pull_request.merged &&
      contains(github.event.pull_request.labels.*.name, 'publish')
      }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          macOS-latest,
          windows-latest,
          # Copied from SqlDelight: https://github.com/cashapp/sqldelight/blame/master/.github/workflows/PR.yml#L13-L18
          # TL;DR looks like libraries installed on ubuntu-latest conflicts, resulting in failed builds
          # Also, see: https://github.com/touchlab/SQLiter/pull/38#issuecomment-867171789
          ubuntu-18.04,
        ]
        java-version: [ 11, 12, 16, 18 ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Unarchive keystore signing files
        run: |
          gpg --quiet --batch --yes --always-trust --decrypt --passphrase=${{ secrets.SECRET_GPG_PASSWORD }} --output secrets.tar secrets.tar.gpg
          tar xvf secrets.tar

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ matrix.java-version }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Run build (includes ktlint/detekt/test/binary-compatibility check)
        run: ./gradlew build

  artifact-stable-publish:
    runs-on: ubuntu-latest
    needs: [ artifact-builds ]

    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Label filtering
        id: label
        uses: duckie-team/quack-label-filter-actions@1.0.3
        with:
          labels: "${{ toJson(github.event.pull_request.labels.*.name) }}"

      - name: Unarchive keystore signing files
        run: |
          gpg --quiet --batch --yes --always-trust --decrypt --passphrase=${{ secrets.SECRET_GPG_PASSWORD }} --output secrets.tar secrets.tar.gpg
          tar xvf secrets.tar

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Generate baseline profile
        if: ${{ steps.label.outputs.release_target == 'UiComponents' }}
        run: ./gradlew :ui-components-benchmark:pixel6Api31ReleaseAndroidTest

      - name: Move baseline profile
        if: ${{ steps.label.outputs.release_target == 'UiComponents' }}
        run: >
          mv
          ui-components-benchmark/build/outputs/managed_device_android_test_additional_output/pixel6Api31/BaselineProfileGenerator_startup-baseline-prof.txt
          ui-components/src/main/baseline-prof.txt

      - name: Bump version
        run: ./gradlew bump -Ptype=${{ steps.label.outputs.bump_type }} -Ptarget=${{ steps.label.outputs.release_target }}

      - name: Publish to Maven Central
        run: ./gradlew ${{ steps.label.outputs.publish_module_id }}:publish

      - name: Quack version parsing
        id: version
        uses: duckie-team/quack-parse-version-actions@1.0.1
        with:
          path: ${{ steps.label.outputs.version_path }}

      - name: Tag and Push new version
        run: |
          git config user.name "sungbinland-bot"
          git config user.email "sungbinland.project@gmail.com"
          git add .
          git commit -m "[CI] bump artifact"
          git tag ${{ steps.version.outputs.version }}
          git push

      - name: Export new version
        id: new_version
        run: echo "version=[${{ steps.label.outputs.release_target }}] ${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        uses: ncipollo/release-action@v1.11.1
        with:
          generateReleaseNotes: true
          name: ${{ steps.new_version.outputs.version }}
          tag: ${{ steps.version.outputs.version }}

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: C046H1UR2CA
          slack-message: "꽥꽥의 새로운 버전 `${{ steps.new_version.outputs.version }}` 이 배포됐어요 🥳"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
